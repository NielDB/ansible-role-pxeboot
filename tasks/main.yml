---
#tasks file for pxeserver
- name: "Installing packages"
  yum:
    name:
  #  - dhcp
      - tftp
      - tftp-server
      - syslinux
      - vsftpd
      - xinetd
    state: present

  # - name: Edit config file for dhcp
  #   blockinfile:
  # path: /etc/dhcp/dhcpd.conf
  # block: |

  #   ddns-update-style interim;
  #   ignore client-updates;
  #   authoritative;
  #   allow booting;
  #   allow bootp;
  #   allow unknown-clients;

  #   # internal subnet for my DHCP Server
  #   subnet 10.0.0.0 netmask 255.255.255.0 {
  #   range 10.0.0.100 172.16.0.3900;
  #   option domain-name-servers 172.16.0.39;
  #   option domain-name "pxe.example.com";
  #   option routers 172.16.0.39;
  #   option broadcast-address 10.255.255.255;
  #   default-lease-time 600;
  #   max-lease-time 7200;

  #   # IP of PXE Server
  #   next-server 172.16.0.39;
  #   filename "pxelinux.0";
  #   }


- name: Edit config file for tftp
  lineinfile:
    path: /etc/xinetd.d/tftp
    regexp: 'disable'
    line: 'disable = no'

- name: Edit config file for SELINUX
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: 'SELINUX=permissive'
    line: 'SELINUX=disabled'

- name: Copying required boot files
  copy:
    src: /usr/share/syslinux/pxelinux.0
    dest: /var/lib/tftpboot
    remote_src: yes


- name: Set ftp folder permissions
  file:
    path: /var/ftp/pub
    state: directory
    mode: "0775"
    setype: public_content_rw_t

- name: Copying required boot files
  copy:
    src: /usr/share/syslinux/menu.c32
    dest: /var/lib/tftpboot
    remote_src: yes

- name: Copying required boot files
  copy:
    src: /usr/share/syslinux/memdisk
    dest: /var/lib/tftpboot
    remote_src: yes

- name: Copying required boot files
  copy:
    src: /usr/share/syslinux/mboot.c32
    dest: /var/lib/tftpboot
    remote_src: yes

- name: Copying required boot files
  copy:
    src: /usr/share/syslinux/chain.c32
    dest: /var/lib/tftpboot
    remote_src: yes

- name: Creating directories for image installation files
  file:
    path: /var/lib/tftpboot/pxelinux.cfg
    state: directory



- name: Create directories for boot images
  file:
    path: "/var/lib/tftpboot/{{ item.name }}"
    state: directory
  with_items: "{{ pxeboot_images }}"

- name: Create directories for boot images
  file:
    path: "/var/ftp/pub/{{ item.name }}/LiveOS"
    state: directory
  with_items: "{{ pxeboot_images }}"

- name: Create directories for boot images
  file:
    path: "/var/ftp/pub/{{ item.name }}/iso"
    state: directory
  with_items: "{{ pxeboot_images }}"


- name: Download kernel images
  get_url:
    url: "{{ item.kernel_url }}"
    dest: "/var/lib/tftpboot/{{ item.name }}/vmlinuz"
  with_items: "{{ pxeboot_images }}"

- name: Download initrd images
  get_url:
    url: "{{ item.initrd_url }}"
    dest: "/var/lib/tftpboot/{{ item.name }}/initrd.img"
  with_items: "{{ pxeboot_images }}"

- name: Download LiveOS for images
  get_url:
    url: "{{ item.liveos_url }}"
    dest: "/var/ftp/pub/{{ item.name }}/LiveOS"
  with_items: "{{ pxeboot_images }}"



# - name: Add local kickstart file for Images
#   copy:
#     src: {{ kickstartfile_path }}
#     dest: "/var/ftp/pub/kick-{{ item.name }}.cfg"
#     remote_src: yes
#   with_items: "{{ pxeboot_images }}"

- name: Download kickstart file for Images
  get_url:
    url: "{{ item.kickstart_url }}"
    dest: "/var/ftp/pub/kick-{{ item.name }}.cfg"
  with_items: "{{ pxeboot_images }}"



- name: Create PXEBoot menu file
  copy:
    dest: /var/lib/tftpboot/pxelinux.cfg/default
    content: |
      default menu.c32
      prompt 0

      MENU TITLE PXE Menu


- name: Append images to PXEBoot menu
  blockinfile: 
    state: present
    insertafter: EOF
    dest: /var/lib/tftpboot/pxelinux.cfg/default
    marker: " "
    content: |
      LABEL {{ item.0 }}
      MENU LABEL ^{{ item.0 }}) {{ item.1.name }}
      KERNEL /{{ item.1.name }}/vmlinuz
      APPEND initrd=/{{ item.1.name }}/initrd.img inst.repo=ftp://172.16.0.39/pub/centos ks=ftp://172.16.0.39/pub/kick-centos.cfg
  with_indexed_items: "{{ pxeboot_images }}"


- name: Start & enable service xinetd
  service:
    name: xinetd
    state: started
    enabled: yes

# - name: Start & enable service dhcpd
#   service:
# name: dhcpd
# state: started
# enabled: yes

- name: Start & enable service vsftpd
  service:
    name: vsftpd
    state: started
    enabled: yes
